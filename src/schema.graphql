type CreateConfirmResponse {
  ok: Boolean!
  error: String
  confirmRecordId: Int
}

type Mutation {
  CreateConfirm(medicalRecordId: Int!, result: String!): CreateConfirmResponse!
  CreateMedicalRecord(lang: Language!, status: Status!, allergy: Allergy!, pregnant: Pregnant!, chronicDiseases: ChronicDiseases!, cold_cough: Boolean, cold_headache: Boolean, cold_runnyNose: Boolean, cold_soreThroat: Boolean, cold_fever: Boolean, cold_bodyache: Boolean, hangover_headache: Boolean, hangover_diarrhea: Boolean, hangover_vomit: Boolean, hangover_nausea: Boolean, hangover_heartburn: Boolean, stomachache_diarrhead: Boolean, stomachache_periodCramps: Boolean, stomachache_indigestion: Boolean, stomachache_constipation: Boolean, stomachache_nausea: Boolean, stomachache_heartburn: Boolean, skin_abrasion: Boolean, skin_acne: Boolean, skin_rash: Boolean, skin_eczema: Boolean, skin_blister: Boolean, skin_athletesfoot: Boolean, female_periodCramp: Boolean, female_pregnancyTest: Boolean, female_oralBirthControl: Boolean, female_postCoitalBirthControl: Boolean, other_tmp: Boolean): CreateMedicalRecordResponse!
  UpdateConfirmRecord(confirmRecordId: Int!, result: String!): UpdateConfirmRecordResponse!
  EmailSignUp(email: String!, firstName: String!, lastName: String!, password: String!, isAbroad: Boolean!, abroadAddress: String, addressList: Address, addressItem: String, age: Int!, gender: Gender!, nationality: Nationality!): EmailSignUpResponse!
  UpdateMyProfile(isAbroad: Boolean!, abroadAddress: String, addressList: Address, addressItem: String, firstName: String, lastName: String, age: Int, password: String, gender: Gender, nationality: Nationality): UpdateMyProfileResponse!
}

type CreateMedicalRecordResponse {
  ok: Boolean
  error: String
  medicalRecordId: Int
}

type GetMyMedicalRecordsResponse {
  ok: Boolean!
  error: String
  medicalRecords: [MedicalRecord]
  totalCount: Int
}

type Query {
  GetMyMedicalRecords(first: Int, offset: Int): GetMyMedicalRecordsResponse!
  EmailSignIn(email: String!, password: String!): EmailSignInResponse!
  GetMyProfile: GetMyProfileResponse!
}

type ConfirmRecord {
  id: Int!
  result: String!
  medicalRecordId: Int
  medicalRecord: MedicalRecord!
  createdAt: String!
  updatedAt: String
}

enum Language {
  JA
  FR
  ES
  RU
  MO
  VI
  TH
  KO
  EN
  CH
}

enum Status {
  COLD
  HANGOVER
  STOMACHACHE
  SKIN
  FEMALE
  OTHER
}

enum Allergy {
  NULL
  ALLERGY_PAINKILLER
  ALLERGY_ANTIBIOTIC
  ALLERGY_LACTOSE
}

enum Pregnant {
  NULL
  PREGNANT_TRUE
}

enum ChronicDiseases {
  NULL
  CHRONIC_LIVER
  CHRONIC_KIDNEY
}

type MedicalRecord {
  id: Int!
  lang: Language!
  status: Status!
  allergy: Allergy!
  pregnant: Pregnant!
  chronicDiseases: ChronicDiseases!
  createdAt: String!
  updatedAt: String
  patientId: Int!
  patient: User!
  confirmId: Int
  confirm: ConfirmRecord
  # Cold - 감기
  cold_cough: Boolean
  cold_headache: Boolean
  cold_runnyNose: Boolean
  cold_soreThroat: Boolean
  cold_fever: Boolean
  cold_bodyache: Boolean
  # Hangover - 숙취
  hangover_headache: Boolean
  hangover_diarrhea: Boolean
  hangover_vomit: Boolean
  hangover_nausea: Boolean
  hangover_heartburn: Boolean
  # Stomachache - 복통
  stomachache_diarrhead: Boolean
  stomachache_periodCramps: Boolean
  stomachache_indigestion: Boolean
  stomachache_constipation: Boolean
  stomachache_nausea: Boolean
  stomachache_heartburn: Boolean
  # Skin - 피부질환
  skin_abrasion: Boolean
  skin_acne: Boolean
  skin_rash: Boolean
  skin_eczema: Boolean
  skin_blister: Boolean
  skin_athletesfoot: Boolean
  # Female - 여성질환
  female_periodCramp: Boolean
  female_pregnancyTest: Boolean
  female_oralBirthControl: Boolean
  female_postCoitalBirthControl: Boolean
  # Other - 기타
  other_tmp: Boolean
}

type UpdateConfirmRecordResponse {
  ok: Boolean!
  error: String
  confirmRecordId: Int
}

type EmailSignInResponse {
  ok: Boolean!
  error: String
  token: String
}

type EmailSignUpResponse {
  ok: Boolean!
  error: String
  token: String
}

enum Gender {
  M
  W
}

enum Nationality {
  JA
  FR
  ES
  RU
  MO
  VI
  TH
  KO
  EN
  CH
  JA
  FR
  ES
  RU
  MO
  VI
  TH
  KO
  EN
  CH
}

type GetMyProfileResponse {
  ok: Boolean!
  error: String
  user: User
}

enum Address {
  SEOUL
  BUSAN
  DAEGU
  INCHEON
  GWANGJU
  DAEJEON
  ULSAN
  SEJONG
  GYEONGGI
  GANGWON
  CHUNGBUK
  CHUNGNAM
  JEONBUK
  JEONNAM
  GYEONGBUK
  GYEONGNAM
  JEJU
}

type User {
  id: Int!
  firstName: String!
  lastName: String!
  fullName: String
  email: String!
  password: String!
  age: Int!
  medicalRecords: [MedicalRecord]!
  medicalRecordsCount: Int
  gender: Gender!
  isAbroad: Boolean!
  nationality: Nationality!
  abroadAddress: String
  addressList: Address
  addressItem: String
  createdAt: String!
  updatedAt: String
}

type UpdateMyProfileResponse {
  ok: Boolean!
  error: String
  user: User
}
